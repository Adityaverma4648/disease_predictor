df['disease_encoded'] = label_encoder.fit_transform(df['disease'])

# Tokenize symptoms
vectorizer = CountVectorizer(tokenizer=lambda x: x.split(', '),lowercase=True)
X = vectorizer.fit_transform(df['symptoms'])

# Step 3: Split data into features and target
y = df['disease_encoded']

# Step 4: Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Fit the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Sample input symptom for prediction
# input_symptom = "Palpitations, Sweating, Trembling, Shortness of breath, Fear of losing control, Dizziness"
input_symptom =  json.loads(sys.argv[1])

print("input_symptom" , input_symptom)

# Preprocess the input symptom using the trained CountVectorizer
X_input = vectorizer.transform(input_symptom)

print(X_input)

# Predict the disease based on the input symptom
predicted_disease_code = model.predict(X_input)
predicted_disease = label_encoder.inverse_transform([int(predicted_disease_code)])

print(predicted_disease_code, predicted_disease)

print(f"The predicted disease based on the input symptom is: {predicted_disease[0]}")